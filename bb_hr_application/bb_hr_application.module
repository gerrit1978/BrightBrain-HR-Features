<?php
/**
 * @file
 * Code for the BB HR Application feature.
 */

include_once 'bb_hr_application.features.inc';

/**
 * Implements hook_form_FORM_ID_alter().
 */
function bb_hr_application_form_context_admin_node_form_wrapper_alter(&$form, &$form_state, $form_id) {
  if (isset($form['#node']) && $form['#node']->type == "application") {
    $job_id = isset($form['#node']->field_application_job_ref[LANGUAGE_NONE][0]['target_id']) ? $form['#node']->field_application_job_ref[LANGUAGE_NONE][0]['target_id'] : FALSE;
    if ($job_id) {
      $job = node_load($job_id);
      if (!$job) {
        return;
      }
      // Add a link to the job and imitate the field structure so that it has
      // a consistent look in most cases.
      $markup = '<div class="field field-application-job-ref field-label-inline clearfix"><div class="field-label">' .
        t('Job') . ':&nbsp;</div><div class="field-items"><div class="field-item even">' .
        l($job->title, 'node/' . $job->nid) .
        '</div></div></div>';

      $form['job_info'] = array(
        '#markup' => $markup,
        '#weight' => -99,
      );

      // Rename the save button.
      $form['actions']['submit']['#value'] = t('Send application');
    }
  }
}


/**
 * Returns TRUE if threre are job applications for a certain job.
 *
 * @param $applicant
 *   Either the uid of an applicant user or the user object itself.
 *
 * @param $node_id
 *   The node id of a $job offering.
 *
 * @return bool
 *   TRUE if there is an application for this job and applicant, else FALSE.
 */
function bb_hr_application_exists_for_job($applicant, $node_id) {

  $application_exists = &drupal_static(__FUNCTION__);

  $applicant = is_object($applicant) ? $applicant : user_load($applicant);
  if (!isset($application_exists[$applicant->uid])) {
    $query = db_select('field_data_field_application_job_ref', 'jr');
    $query->addField('jr', 'field_application_job_ref_target_id');
    $query->innerJoin('node', 'n', 'jr.entity_id = n.nid');
    $query->condition('n.uid', $applicant->uid);
    
    $result = $query->execute()->fetchCol();
    $application_exists[$applicant->uid] = $result;
  }

  return in_array($node_id->nid, $application_exists[$applicant->uid]) ;
}
